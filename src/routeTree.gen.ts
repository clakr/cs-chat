/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteRouteImport } from './routes/_guest/route'
import { Route as AuthedRouteRouteImport } from './routes/_authed/route'
import { Route as GuestIndexRouteImport } from './routes/_guest/index'
import { Route as AuthedARouteRouteImport } from './routes/_authed/a/route'

const GuestRouteRoute = GuestRouteRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRouteRoute = AuthedRouteRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestIndexRoute = GuestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRouteRoute,
} as any)
const AuthedARouteRoute = AuthedARouteRouteImport.update({
  id: '/a',
  path: '/a',
  getParentRoute: () => AuthedRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/a': typeof AuthedARouteRoute
  '/': typeof GuestIndexRoute
}
export interface FileRoutesByTo {
  '/a': typeof AuthedARouteRoute
  '/': typeof GuestIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authed': typeof AuthedRouteRouteWithChildren
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_authed/a': typeof AuthedARouteRoute
  '/_guest/': typeof GuestIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/a' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/a' | '/'
  id: '__root__' | '/_authed' | '/_guest' | '/_authed/a' | '/_guest/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexRouteImport
      parentRoute: typeof GuestRouteRoute
    }
    '/_authed/a': {
      id: '/_authed/a'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof AuthedARouteRouteImport
      parentRoute: typeof AuthedRouteRoute
    }
  }
}

interface AuthedRouteRouteChildren {
  AuthedARouteRoute: typeof AuthedARouteRoute
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedARouteRoute: AuthedARouteRoute,
}

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
)

interface GuestRouteRouteChildren {
  GuestIndexRoute: typeof GuestIndexRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestIndexRoute: GuestIndexRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  GuestRouteRoute: GuestRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
